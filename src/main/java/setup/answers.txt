CSE 331 Homework 3.  Answers to Written questions.
Edit this file to supply your answers.

Name:  Julian Gallegos

Problem 6.

(a)
It failed the test because an illegal argument is supposed to be an input that is less than 0
We fixed this by setting the case "n <= 0" to "n < 0"

(b)
Failed because base case is supposed to cover n = 0 and n = 1, but it covers n = 2 as well.
Fixed by setting "n <= 2" to "n < 2"

(c)
Failed because inductive case is supposed to add the sum of the two previous terms, but instead subtracts
fixed by changing the "-" sign to a "+" sign.

Problem 7. 

Q1)
Ball.java's getVolume method did not return the volume value, and instead returned 0,
fixed this by changing the return statement, was:
return 0;

now is:
return this.volume;

Also had an issue with the Ball constructor, which set its parameter to the value "volume" in the Ball object.
The parameter for the constructor is "volume," however the value in Ball object is also volume, and within the
constructor we have the statement "volume = volume" which does not distinguish between the parameter and the
object value, so changed that statement to the following to fix it:
this.volume = volume;

Q2)
Approach 2 does require that we store an extra variable that stays until the BallContainer object is unused/
removed (or when whatever program it is used in terminates), but it may also save more time if getVolume is
frequently called. Overall it seems better.

Q3)
I believe there are two clear ways to sort the balls from smallest volume to largest.
The program can sort every time getBallsFromSmallest is called, or the program can
sort the volume of the balls when they are being added or removed. The the program
calls the add and remove methods often, and getBallsFromSmallest less often, the
former approach would be more efficient. The latter approach is more efficient if
getBallsFromSmallest is called more often.